(slice, ((int, int))) __gen_read_SetIntMap1(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1510253336);
    var v'key = sc_0~load_int(257);
    var v'value = sc_0~load_int(1) ? sc_0~load_int(257) : null();
    return (sc_0, (v'key, v'value));
}

(slice, ((int, int))) __gen_read_SetIntMap2(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1629867766);
    var v'key = sc_0~load_int(257);
    var v'value = sc_0~load_int(1) ? sc_0~load_int(1) : null();
    return (sc_0, (v'key, v'value));
}

(slice, ((int, cell))) __gen_read_SetIntMap3(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3613954633);
    var v'key = sc_0~load_int(257);
    var v'value = sc_0~load_int(1) ? sc_0~load_ref() : null();
    return (sc_0, (v'key, v'value));
}

builder __gen_write_SomeStruct(builder build_0, (int) v) inline {
    var (v'value) = v;
    build_0 = build_0.store_int(v'value, 257);
    return build_0;
}

cell __gen_writecell_SomeStruct((int) v) inline {
    return __gen_write_SomeStruct(begin_cell(), v).end_cell();
}

((int)) __gen_SomeStruct_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (int vvv'value) = __tact_tuple_destroy_1(v);
    return (vvv'value);
}

cell __gen_writecellopt_SomeStruct(tuple v) inline {
    if (null?(v)) {
        return null();
    }
    return __gen_writecell_SomeStruct(__gen_SomeStruct_not_null(v));
}

(slice, ((int))) __gen_read_SomeStruct(slice sc_0) inline {
    var v'value = sc_0~load_int(257);
    return (sc_0, (v'value));
}

tuple __gen_SomeStruct_as_optional(((int)) v) inline {
    var (v'value) = v;
    return __tact_tuple_create_1(v'value);
}

tuple __gen_readopt_SomeStruct(cell cl) inline {
    if (null?(cl)) {
        return null();
    }
    var sc = cl.begin_parse();
    return __gen_SomeStruct_as_optional(sc~__gen_read_SomeStruct());
}

(slice, ((int, tuple))) __gen_read_SetIntMap4(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 383013829);
    var v'key = sc_0~load_int(257);
    var v'value = sc_0~load_int(1) ? __gen_SomeStruct_as_optional(sc_0~__gen_read_SomeStruct()) : null();
    return (sc_0, (v'key, v'value));
}

(slice, ((slice, int))) __gen_read_SetAddrMap1(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1749966413);
    var v'key = sc_0~__tact_load_address();
    var v'value = sc_0~load_int(1) ? sc_0~load_int(257) : null();
    return (sc_0, (v'key, v'value));
}

(slice, ((slice, int))) __gen_read_SetAddrMap2(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 624157584);
    var v'key = sc_0~__tact_load_address();
    var v'value = sc_0~load_int(1) ? sc_0~load_int(1) : null();
    return (sc_0, (v'key, v'value));
}

(slice, ((slice, cell))) __gen_read_SetAddrMap3(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 4276365062);
    var v'key = sc_0~__tact_load_address();
    var v'value = sc_0~load_int(1) ? sc_0~load_ref() : null();
    return (sc_0, (v'key, v'value));
}

(slice, ((slice, tuple))) __gen_read_SetAddrMap4(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1683777913);
    var v'key = sc_0~__tact_load_address();
    var v'value = sc_0~load_int(1) ? __gen_SomeStruct_as_optional(sc_0~__gen_read_SomeStruct()) : null();
    return (sc_0, (v'key, v'value));
}

builder __gen_write_MapTestContract(builder build_0, (cell, cell, cell, cell, cell, cell, cell, cell) v) inline {
    var (v'intMap1, v'intMap2, v'intMap3, v'intMap4, v'addrMap1, v'addrMap2, v'addrMap3, v'addrMap4) = v;
    build_0 = build_0.store_dict(v'intMap1);
    build_0 = build_0.store_dict(v'intMap2);
    var build_1 = begin_cell();
    build_1 = build_1.store_dict(v'intMap3);
    build_1 = build_1.store_dict(v'intMap4);
    build_1 = build_1.store_dict(v'addrMap1);
    var build_2 = begin_cell();
    build_2 = build_2.store_dict(v'addrMap2);
    build_2 = build_2.store_dict(v'addrMap3);
    build_2 = build_2.store_dict(v'addrMap4);
    build_1 = store_ref(build_1, build_2.end_cell());
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

(slice, ((cell, cell, cell, cell, cell, cell, cell, cell))) __gen_read_MapTestContract(slice sc_0) inline {
    var v'intMap1 = sc_0~load_dict();
    var v'intMap2 = sc_0~load_dict();
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'intMap3 = sc_1~load_dict();
    var v'intMap4 = sc_1~load_dict();
    var v'addrMap1 = sc_1~load_dict();
    slice sc_2 = sc_1~load_ref().begin_parse();
    var v'addrMap2 = sc_2~load_dict();
    var v'addrMap3 = sc_2~load_dict();
    var v'addrMap4 = sc_2~load_dict();
    return (sc_0, (v'intMap1, v'intMap2, v'intMap3, v'intMap4, v'addrMap1, v'addrMap2, v'addrMap3, v'addrMap4));
}

tuple __gen_SomeStruct_to_tuple(((int)) v) inline {
    var (v'value) = v;
    return __tact_tuple_create_1(v'value);
}

tuple __gen_SomeStruct_opt_to_tuple(tuple v) inline {
    if (null?(v)) { return null(); } 
    return __gen_SomeStruct_to_tuple(__gen_SomeStruct_not_null(v)); 
}

tuple __gen_SomeStruct_opt_to_external(tuple v) inline {
    var loaded = __gen_SomeStruct_opt_to_tuple(v);
    if (null?(loaded)) {
        return null();
    } else {
        return (loaded);
    }
}