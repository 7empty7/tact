#include "treasure_Treasure.stdlib.fc";
#include "treasure_Treasure.storage.fc";

(slice) $__gen_Treasure_init(slice $owner) impure inline_ref {
    var (($self'owner)) = (null());
    $self'owner = $owner;
    return ($self'owner);
}

(slice) __gen_load_Treasure() impure inline {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~__gen_read_Treasure();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        (slice owner) = $sc~__gen_read_$init$Treasure();
        $sc.end_parse();
        return $__gen_Treasure_init(owner);
    }
}

() __gen_store_Treasure((slice) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = __gen_write_Treasure(b, v);
    set_data(b.end_cell());
}

() $send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref {
    var (($params'bounce, $params'to, $params'value, $params'mode, $params'body, $params'code, $params'data)) = $params;
    builder $b = begin_cell();
    $b = store_int($b, 1, 2);
    $b = __tact_store_bool($b, $params'bounce);
    $b = store_int($b, 0, 3);
    $b = __tact_store_address($b, $params'to);
    $b = store_coins($b, $params'value);
    $b = store_int($b, 0, ((((1 + 4) + 4) + 64) + 32));
    if (((~ null?($params'code)) | (~ null?($params'data)))) {
        $b = __tact_store_bool($b, true);
        builder $bc = begin_cell();
        $bc = __tact_store_bool($bc, false);
        $bc = __tact_store_bool($bc, false);
        if ((~ null?($params'code))) {
            $bc = __tact_store_bool($bc, true);
            $bc = store_ref($bc, __tact_not_null($params'code));
        } else {
            $bc = __tact_store_bool($bc, false);
        }
        if ((~ null?($params'data))) {
            $bc = __tact_store_bool($bc, true);
            $bc = store_ref($bc, __tact_not_null($params'data));
        } else {
            $bc = __tact_store_bool($bc, false);
        }
        $bc = __tact_store_bool($bc, false);
        $b = __tact_store_bool($b, true);
        $b = store_ref($b, end_cell($bc));
    } else {
        $b = __tact_store_bool($b, false);
    }
    cell $body = $params'body;
    if ((~ null?($body))) {
        $b = __tact_store_bool($b, true);
        $b = store_ref($b, __tact_not_null($body));
    } else {
        $b = __tact_store_bool($b, false);
    }
    cell $c = end_cell($b);
    send_raw_message($c, $params'mode);
}

((int, slice, int, int, cell, cell, cell)) __gen_constructor_SendParameters$value_to_mode_body(int value, slice to, int mode, cell body) inline {
    return (true, to, value, mode, body, null(), null());
}

((slice), ()) $__gen_Treasure_requireOwner((slice) $self) impure inline_ref {
    var (($self'owner)) = $self;
    throw_unless(132, __tact_address_eq(__tact_context_get_sender(), $self'owner));
    return (($self'owner), ());
}

((slice), ()) $__gen_Treasure_doWithdraw((slice) $self, int $amount, int $mode) impure inline_ref {
    var (($self'owner)) = $self;
    ($self'owner)~$__gen_Treasure_requireOwner();
    $send(__gen_constructor_SendParameters$value_to_mode_body($amount, $self'owner, $mode, end_cell(begin_cell())));
    return (($self'owner), ());
}

slice $__gen_Treasure_owner((slice) $self) impure inline_ref {
    var (($self'owner)) = $self;
    return $self'owner;
}

(((slice)), ()) $__gen_Treasure_receive_Withdraw((slice) $self, (int, int) $msg) impure inline {
    var ($self'owner) = $self;
    var ($msg'amount, $msg'mode) = $msg;
    ($self'owner)~$__gen_Treasure_doWithdraw($msg'amount, $msg'mode);
    return (($self'owner), ());
}

((slice), ()) $__gen_Treasure_receive_comment_986c2ba124bb9287eb4a0bd8d3104e1c0067a3c93952d889c74d08185bd30d4d((slice) $self) impure inline {
    var ($self'owner) = $self;
    ($self'owner)~$__gen_Treasure_doWithdraw(0, (32 + 128));
    return (($self'owner), ());
}

(((slice)), ()) $__gen_Treasure_receive_ChangeOwner((slice) $self, (slice) $msg) impure inline {
    var ($self'owner) = $self;
    var ($msg'newOwner) = $msg;
    ($self'owner)~$__gen_Treasure_requireOwner();
    $self'owner = $msg'newOwner;
    return (($self'owner), ());
}

;;
;; Public Interface of a Contract Treasure
;;

((slice), int) __gen_router_Treasure((slice) self, int msg_bounced, slice in_msg) impure inline_ref {
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Receive Withdraw message
    if (op == 1672521544) {
        var msg = in_msg~__gen_read_Withdraw();
        self~$__gen_Treasure_receive_Withdraw(msg);
        return (self, true);
    }
    
    ;; Receive ChangeOwner message
    if (op == 256331011) {
        var msg = in_msg~__gen_read_ChangeOwner();
        self~$__gen_Treasure_receive_ChangeOwner(msg);
        return (self, true);
    }
    
    ;; Text Receivers
    if (op == 0) {
        var text_op = slice_hash(in_msg);
        
        ;; Receive "Destroy" message
        if (text_op == 0x986c2ba124bb9287eb4a0bd8d3104e1c0067a3c93952d889c74d08185bd30d4d) {
            self~$__gen_Treasure_receive_comment_986c2ba124bb9287eb4a0bd8d3104e1c0067a3c93952d889c74d08185bd30d4d();
            return (self, true);
        }
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = ((msg_flags & 1) == 1 ? true : false);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = __gen_load_Treasure();
    
    ;; Handle operation
    int handled = self~__gen_router_Treasure(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(handled, 130);
    
    ;; Persist state
    __gen_store_Treasure(self);
}

_ %owner() method_id(83229) {
    var self = __gen_load_Treasure();
    var res = $__gen_Treasure_owner(self);
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128,
        "org.ton.ownable.transferable"H >> 128,
        "org.ton.ownable"H >> 128
    );
}

_ get_abi_ipfs() {
    return "ipfs://QmT8hcgWSSoJ98BazuBLkc8eZEd5iLMfEHaMUWNZgwd69D";
}

_ lazy_deployment_completed() {
    return get_data().begin_parse().load_int(1);
}
