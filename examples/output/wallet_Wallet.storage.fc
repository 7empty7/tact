builder __gen_write_Transfer(builder build_0, (int, int, slice, int, cell) v) inline {
    var (v'seqno, v'mode, v'to, v'amount, v'body) = v;
    build_0 = build_0.store_uint(v'seqno, 32);
    build_0 = build_0.store_uint(v'mode, 8);
    build_0 = __tact_store_address(build_0, v'to);
    build_0 = build_0.store_coins(v'amount);
    build_0 = ~ null?(v'body) ? build_0.store_int(true, 1).store_ref(v'body) : build_0.store_int(false, 1);
    return build_0;
}

cell __gen_writecell_Transfer((int, int, slice, int, cell) v) inline {
    return __gen_write_Transfer(begin_cell(), v).end_cell();
}

(slice, ((int, int, slice, int, cell))) __gen_read_Transfer(slice sc_0) inline {
    var v'seqno = sc_0~load_uint(32);
    var v'mode = sc_0~load_uint(8);
    var v'to = sc_0~__tact_load_address();
    var v'amount = sc_0~load_coins();
    var v'body = sc_0~load_int(1) ? sc_0~load_ref() : null();
    return (sc_0, (v'seqno, v'mode, v'to, v'amount, v'body));
}

(slice, ((slice, (int, int, slice, int, cell)))) __gen_read_TransferMessage(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 123);
    var v'signature = sc_0~load_ref().begin_parse();
    var v'transfer = sc_0~__gen_read_Transfer();
    return (sc_0, (v'signature, v'transfer));
}

builder __gen_write_Wallet(builder build_0, (int, int, int) v) inline {
    var (v'seqno, v'key, v'walletId) = v;
    build_0 = build_0.store_uint(v'seqno, 32);
    build_0 = build_0.store_uint(v'key, 256);
    build_0 = build_0.store_uint(v'walletId, 64);
    return build_0;
}

(slice, ((int, int, int))) __gen_read_Wallet(slice sc_0) inline {
    var v'seqno = sc_0~load_uint(32);
    var v'key = sc_0~load_uint(256);
    var v'walletId = sc_0~load_uint(64);
    return (sc_0, (v'seqno, v'key, v'walletId));
}

builder __gen_write_$init$Wallet(builder build_0, (int, int) v) inline {
    var (v'key, v'walletId) = v;
    build_0 = build_0.store_int(v'key, 257);
    build_0 = build_0.store_int(v'walletId, 257);
    return build_0;
}

(slice, ((int, int))) __gen_read_$init$Wallet(slice sc_0) inline {
    var v'key = sc_0~load_int(257);
    var v'walletId = sc_0~load_int(257);
    return (sc_0, (v'key, v'walletId));
}