PROGRAM{
  DECLPROC __tact_not_null
  DECLPROC __tact_context_get
  DECLPROC __tact_verify_address
  DECLPROC __tact_store_address
  DECLPROC __tact_string_builder_start
  DECLPROC __tact_string_builder_start_comment
  DECLPROC __tact_string_builder_start_string
  DECLPROC __tact_string_builder_end
  DECLPROC __tact_string_builder_end_slice
  DECLPROC __tact_string_builder_append
  DECLPROC __gen_write_Echo
  DECLPROC __gen_read_Echo
  DECLPROC __gen_load_Echo
  DECLPROC __gen_store_Echo
  DECLPROC $storeBool
  DECLPROC $send
  DECLPROC $reply
  DECLPROC $__gen_Slice_asCell
  DECLPROC $__gen_String_asComment
  DECLPROC $__gen_Echo_init
  DECLPROC $__gen_Echo_hello
  115554 DECLMETHOD $__gen_get_hello
  DECLPROC $__gen_Echo_receive_comment
  DECLPROC $__gen_Echo_receive_fallback
  DECLPROC recv_internal
  101720 DECLMETHOD init_Echo
  113617 DECLMETHOD supported_interfaces
  DECLPROC get_abi_ipfs
  DECLGLOBVAR __tact_context
  DECLGLOBVAR __tact_context_sys
  __tact_not_null PROC:<{
    DUP
    ISNULL
    128 THROWIF
  }>
  __tact_context_get PROCINLINE:<{
    __tact_context GETGLOB
    4 UNTUPLE
  }>
  __tact_verify_address PROCINLINE:<{
    SBITS
    267 PUSHINT
    NEQ
    134 THROWIFNOT
  }>
  __tact_store_address PROCINLINE:<{
    STSLICER
  }>
  __tact_string_builder_start PROCINLINE:<{
    NEWC
    SWAP
    IF:<{
      0 PUSHINT
      SWAP
      32 STU
    }>
    NIL
    SWAP
    TPUSH
    PUSHNULL
    TPUSH
  }>
  __tact_string_builder_start_comment PROCINLINE:<{
    TRUE
    __tact_string_builder_start INLINECALLDICT
  }>
  __tact_string_builder_start_string PROCINLINE:<{
    FALSE
    __tact_string_builder_start INLINECALLDICT
  }>
  __tact_string_builder_end PROC:<{
    UNCONS
    SWAP
    ENDC
    WHILE:<{
      OVER
      ISNULL
      NOT
    }>DO<{
      SWAP
      UNCONS
      -ROT
      STREF
      ENDC
    }>
    NIP
  }>
  __tact_string_builder_end_slice PROC:<{
    __tact_string_builder_end CALLDICT
    CTOS
  }>
  __tact_string_builder_append PROC:<{
    DUP
    SREFS
    OVER
    SBITS
    WHILE:<{
      DUP
      0 GTINT
      s2 PUSH
      0 GTINT
      OR
    }>DO<{
      s0 s3 XCHG
      UNCONS
      127 PUSHINT
      s2 PUSH
      BBITS
      3 RSHIFT#
      SUB
      s0 s5 XCHG
      3 RSHIFT#
      s5 s5 XCPU
      MIN
      DUP
      0 GTINT
      IF:<{
        DUP
        3 LSHIFT#
        s1 s5 XCHG
        LDSLICEX
        s3 s3 XCHG2
        STSLICER
        s0 s1 s4 XCHG3
      }>
      -ROT
      CONS
      s4 s1 PUSH2
      SUB
      0 GTINT
      IF:<{
        NEWC
        SWAP
        CONS
        s4 s4 XCHG2
        SUB
        3 LSHIFT#
      }>ELSE<{
        NIP
        s3 POP
        0 GTINT
        IF:<{
          LDREF
          DROP
          CTOS
          DUP
          SREFS
          OVER
          SBITS
        }>ELSE<{
          0 PUSHINT
          DUP
        }>
      }>
    }>
    3 BLKDROP
  }>
  __gen_write_Echo PROCINLINE:<{
    SWAP
    257 PUSHINT
    STIX
  }>
  __gen_read_Echo PROCINLINE:<{
    257 PUSHINT
    LDIX
    SWAP
  }>
  __gen_load_Echo PROCINLINE:<{
    c4 PUSH
    CTOS
    LDREF
    SWAP
    __tact_context_sys SETGLOB
    __gen_read_Echo INLINECALLDICT
    NIP
  }>
  __gen_store_Echo PROCINLINE:<{
    NEWC
    __tact_context_sys GETGLOB
    SWAP
    STREF
    SWAP
    __gen_write_Echo INLINECALLDICT
    ENDC
    c4 POP
  }>
  $storeBool PROC:<{
    IFJMP:<{
      -1 PUSHINT
      SWAP
      1 STI
    }>
    0 PUSHINT
    SWAP
    1 STI
  }>
  $send PROC:<{
    NEWC
    1 PUSHINT
    SWAP
    2 STI
    s0 s7 XCHG2
    $storeBool CALLDICT
    0 PUSHINT
    SWAP
    3 STI
    s0 s5 XCHG2
    __tact_store_address INLINECALLDICT
    s0 s3 XCHG2
    STGRAMS
    0 PUSHINT
    SWAP
    105 STI
    s3 PUSH
    ISNULL
    NOT
    s5 PUSH
    ISNULL
    NOT
    OR
    IF:<{
      TRUE
      $storeBool CALLDICT
      NEWC
      FALSE
      $storeBool CALLDICT
      FALSE
      $storeBool CALLDICT
      s4 PUSH
      ISNULL
      NOT
      IF:<{
        TRUE
        $storeBool CALLDICT
        s0 s4 XCHG
        __tact_not_null CALLDICT
        s0 s4 XCHG2
        STREF
      }>ELSE<{
        s4 POP
        s0 s3 XCHG
        FALSE
        $storeBool CALLDICT
      }>
      s4 PUSH
      ISNULL
      NOT
      IF:<{
        TRUE
        $storeBool CALLDICT
        s0 s4 XCHG
        __tact_not_null CALLDICT
        s0 s4 XCHG2
        STREF
      }>ELSE<{
        s4 POP
        s0 s3 XCHG
        FALSE
        $storeBool CALLDICT
      }>
      FALSE
      $storeBool CALLDICT
      s0 s2 XCHG
      TRUE
      $storeBool CALLDICT
      s0 s2 XCHG
      ENDC
      ROT
      STREF
    }>ELSE<{
      s3 POP
      s3 POP
      SWAP
      FALSE
      $storeBool CALLDICT
    }>
    OVER
    ISNULL
    NOT
    IF:<{
      TRUE
      $storeBool CALLDICT
      SWAP
      __tact_not_null CALLDICT
      SWAP
      STREF
    }>ELSE<{
      NIP
      FALSE
      $storeBool CALLDICT
    }>
    ENDC
    SWAP
    SENDRAWMSG
  }>
  $reply PROC:<{
    __tact_context_get INLINECALLDICT
    s2 s3 XCHG
    3 BLKDROP
    TRUE
    s0 s2 XCHG
    0 PUSHINT
    66 PUSHINT
    ROT
    PUSHNULL
    PUSHNULL
    $send CALLDICT
  }>
  $__gen_Slice_asCell PROC:<{
    NEWC
    SWAP
    STSLICER
    ENDC
  }>
  $__gen_String_asComment PROC:<{
    __tact_string_builder_start_comment INLINECALLDICT
    SWAP
    __tact_string_builder_append CALLDICT
    __tact_string_builder_end CALLDICT
  }>
  $__gen_Echo_init PROC:<{
    0 PUSHINT
    SWAP
    NEWC
    STREF
    SWAP
    __gen_write_Echo INLINECALLDICT
    ENDC
  }>
  $__gen_Echo_hello PROC:<{
    NIP
    __tact_string_builder_start_string INLINECALLDICT
    B{b5ee9c7241010101000900000e48656c6c6f2c20e8d197d2} B>boc <s PUSHSLICE
    __tact_string_builder_append CALLDICT
    SWAP
    __tact_string_builder_append CALLDICT
    __tact_string_builder_end_slice CALLDICT
  }>
  $__gen_get_hello PROC:<{
    __gen_load_Echo INLINECALLDICT
    SWAP
    $__gen_Echo_hello CALLDICT
  }>
  $__gen_Echo_receive_comment PROC:<{
    $__gen_String_asComment CALLDICT
    $reply CALLDICT
  }>
  $__gen_Echo_receive_fallback PROC:<{
    $__gen_Slice_asCell CALLDICT
    $reply CALLDICT
  }>
  recv_internal PROC:<{
    SAMEALTSAVE
    0 PUSHINT
    OVER
    SBITS
    31 GTINT
    IF:<{
      DROP
      DUP
      32 PLDU
    }>
    s0 s2 XCHG
    CTOS
    4 LDU
    SWAP
    1 PUSHINT
    AND
    1 EQINT
    IF:<{
      TRUE
    }>ELSE<{
      FALSE
    }>
    SWAP
    LDMSGADDR
    s2 PUSH
    s6 s6 XCHG2
    4 TUPLE
    __tact_context SETGLOB
    s0 s2 XCHG
    IFJMP:<{
      2DROP
    }>
    0 EQINT
    IF:<{
      DUP
      SBITS
      31 GTINT
      IFJMP:<{
        __gen_load_Echo INLINECALLDICT
        SWAP
        32 PUSHINT
        SDSKIPFIRST
        $__gen_Echo_receive_comment CALLDICT
        __gen_store_Echo INLINECALLDICT
        RETALT
      }>
    }>
    __gen_load_Echo INLINECALLDICT
    SWAP
    $__gen_Echo_receive_fallback CALLDICT
    __gen_store_Echo INLINECALLDICT
  }>
  init_Echo PROC:<{
    $__gen_Echo_init CALLDICT
  }>
  supported_interfaces PROC:<{
    123515602279859691144772641439386770278 PUSHINT
    209801025412363888721030803524359905849 PUSHINT
  }>
  get_abi_ipfs PROC:<{
    x{697066733a2f2f516d5441436d5a4d715a4c7168726278336b704a424577577a39556f375a3874647658626f5a7452796865715441} PUSHSLICE
  }>
}END>c
