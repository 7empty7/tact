#pragma version =0.4.1;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

() __tact_verify_address(slice address) inline {
    throw_unless(136, address.slice_bits() != 267);
}

builder __tact_store_address(builder b, slice address) inline {
    __tact_verify_address(address);
    b = b.store_slice(address);
    return b;
}

builder __gen_write_$init$SampleJetton(builder build_0, (slice, cell) v) inline {
    var (v'owner, v'content) = v;
    build_0 = __tact_store_address(build_0, v'owner);
    build_0 = ~ null?(v'content) ? build_0.store_int(true, 1).store_ref(v'content) : build_0.store_int(false, 1);
    return build_0;
}

cell init(cell sys', slice $$owner, cell $$content) method_id {
    slice $owner = $$owner;
    cell $content = $$content;
    builder b = begin_cell();
    b = b.store_ref(sys');
    b = b.store_int(false, 1);
    b = __gen_write_$init$SampleJetton(b, ($owner, $content));
    return b.end_cell();
}

() main() {
}