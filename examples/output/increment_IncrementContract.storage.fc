(slice, ((int))) $Deploy$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2490013878);
    var v'queryId = sc_0~load_uint(64);
    return (sc_0, (v'queryId));
}

builder $DeployOk$_store(builder build_0, (int) v) inline {
    var (v'queryId) = v;
    build_0 = store_uint(build_0, 2952335191, 32);
    build_0 = build_0.store_uint(v'queryId, 64);
    return build_0;
}

cell $DeployOk$_store_cell((int) v) inline {
    return $DeployOk$_store(begin_cell(), v).end_cell();
}

(slice, ((int, int))) $Increment$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 537284411);
    var v'key = sc_0~load_int(257);
    var v'value = sc_0~load_int(257);
    return (sc_0, (v'key, v'value));
}

(slice, ((int))) $Toggle$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1081595080);
    var v'key = sc_0~load_int(257);
    return (sc_0, (v'key));
}

(slice, ((int, cell))) $Persist$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3801943978);
    var v'key = sc_0~load_int(257);
    var v'content = sc_0~load_int(1) ? sc_0~load_ref() : null();
    return (sc_0, (v'key, v'content));
}

(slice, ((int))) $Reset$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1718153138);
    var v'key = sc_0~load_int(257);
    return (sc_0, (v'key));
}

builder $Something$_store(builder build_0, (int) v) inline {
    var (v'value) = v;
    build_0 = build_0.store_int(v'value, 257);
    return build_0;
}

cell $Something$_store_cell((int) v) inline {
    return $Something$_store(begin_cell(), v).end_cell();
}

((int)) $Something$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (int vvv'value) = __tact_tuple_destroy_1(v);
    return (vvv'value);
}

cell $Something$_store_opt(tuple v) inline {
    if (null?(v)) {
        return null();
    }
    return $Something$_store_cell($Something$_not_null(v));
}

builder $IncrementContract$_store(builder build_0, (cell, cell, cell, cell, cell) v) inline {
    var (v'counters, v'counters2, v'counters3, v'counters4, v'counters5) = v;
    build_0 = build_0.store_dict(v'counters);
    build_0 = build_0.store_dict(v'counters2);
    var build_1 = begin_cell();
    build_1 = build_1.store_dict(v'counters3);
    build_1 = build_1.store_dict(v'counters4);
    build_1 = build_1.store_dict(v'counters5);
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

(slice, ((cell, cell, cell, cell, cell))) $IncrementContract$_load(slice sc_0) inline {
    var v'counters = sc_0~load_dict();
    var v'counters2 = sc_0~load_dict();
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'counters3 = sc_1~load_dict();
    var v'counters4 = sc_1~load_dict();
    var v'counters5 = sc_1~load_dict();
    return (sc_0, (v'counters, v'counters2, v'counters3, v'counters4, v'counters5));
}