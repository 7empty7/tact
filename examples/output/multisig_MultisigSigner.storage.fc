builder __gen_write_Request(builder build_0, (slice, slice, int, int, int, int, cell) v) inline_ref {
    var (v'requested, v'to, v'value, v'timeout, v'bounce, v'mode, v'body) = v;
    build_0 = store_uint(build_0, 4266760323, 32);
    build_0 = __tact_store_address(build_0, v'requested);
    build_0 = __tact_store_address(build_0, v'to);
    build_0 = build_0.store_coins(v'value);
    build_0 = build_0.store_uint(v'timeout, 32);
    build_0 = build_0.store_int(v'bounce, 1);
    build_0 = build_0.store_uint(v'mode, 8);
    build_0 = ~ null?(v'body) ? build_0.store_int(true, 1).store_ref(v'body) : build_0.store_int(false, 1);
    return build_0;
}

(slice, ((slice, slice, int, int, int, int, cell))) __gen_read_Request(slice sc_0) inline_ref {
    throw_unless(129, sc_0~load_uint(32) == 4266760323);
    var v'requested = sc_0~__tact_load_address();
    var v'to = sc_0~__tact_load_address();
    var v'value = sc_0~load_coins();
    var v'timeout = sc_0~load_uint(32);
    var v'bounce = sc_0~load_int(1);
    var v'mode = sc_0~load_uint(8);
    var v'body = sc_0~load_int(1) ? sc_0~load_ref() : null();
    return (sc_0, (v'requested, v'to, v'value, v'timeout, v'bounce, v'mode, v'body));
}

builder __gen_write_Signed(builder build_0, ((slice, slice, int, int, int, int, cell)) v) inline {
    var ((v'request'requested, v'request'to, v'request'value, v'request'timeout, v'request'bounce, v'request'mode, v'request'body)) = v;
    build_0 = store_uint(build_0, 2213172633, 32);
    build_0 = __gen_write_Request(build_0, (v'request'requested, v'request'to, v'request'value, v'request'timeout, v'request'bounce, v'request'mode, v'request'body));
    return build_0;
}

cell __gen_writecell_Signed(((slice, slice, int, int, int, int, cell)) v) inline {
    return __gen_write_Signed(begin_cell(), v).end_cell();
}

builder __gen_write_MultisigSigner(builder build_0, (slice, cell, int, int, int, (slice, slice, int, int, int, int, cell)) v) inline {
    var (v'master, v'members, v'weight, v'requiredWeight, v'completed, (v'request'requested, v'request'to, v'request'value, v'request'timeout, v'request'bounce, v'request'mode, v'request'body)) = v;
    build_0 = __tact_store_address(build_0, v'master);
    build_0 = build_0.store_dict(v'members);
    build_0 = build_0.store_int(v'weight, 257);
    build_0 = build_0.store_int(v'requiredWeight, 257);
    build_0 = build_0.store_int(v'completed, 1);
    var build_1 = begin_cell();
    build_1 = __gen_write_Request(build_1, (v'request'requested, v'request'to, v'request'value, v'request'timeout, v'request'bounce, v'request'mode, v'request'body));
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

(slice, ((slice, cell, int, int, int, (slice, slice, int, int, int, int, cell)))) __gen_read_MultisigSigner(slice sc_0) inline {
    var v'master = sc_0~__tact_load_address();
    var v'members = sc_0~load_dict();
    var v'weight = sc_0~load_int(257);
    var v'requiredWeight = sc_0~load_int(257);
    var v'completed = sc_0~load_int(1);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'request = sc_1~__gen_read_Request();
    return (sc_0, (v'master, v'members, v'weight, v'requiredWeight, v'completed, v'request));
}

(slice, slice, int, int, int, int, cell) __gen_Request_to_external(((slice, slice, int, int, int, int, cell)) v) inline {
    var (v'requested, v'to, v'value, v'timeout, v'bounce, v'mode, v'body) = v; 
    return (v'requested, v'to, v'value, v'timeout, v'bounce, v'mode, v'body);
}

(slice, ((slice, cell, int, (slice, slice, int, int, int, int, cell)))) __gen_read_$init$MultisigSigner(slice sc_0) inline {
    var v'master = sc_0~__tact_load_address();
    var v'members = sc_0~load_dict();
    var v'requiredWeight = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'request = sc_1~__gen_read_Request();
    return (sc_0, (v'master, v'members, v'requiredWeight, v'request));
}