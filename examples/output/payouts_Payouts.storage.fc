(slice, ((slice))) __gen_read_ChangeOwner(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 256331011);
    var v'newOwner = sc_0~__tact_load_address();
    return (sc_0, (v'newOwner));
}

builder __gen_write_CanPayout(builder build_0, (int) v) inline {
    var (v'amount) = v;
    build_0 = store_uint(build_0, 3289991647, 32);
    build_0 = build_0.store_int(v'amount, 257);
    return build_0;
}

cell __gen_writecell_CanPayout((int) v) inline {
    return __gen_write_CanPayout(begin_cell(), v).end_cell();
}

(slice, ((int, slice, int))) __gen_read_CanPayoutResponse(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 4293607646);
    var v'amount = sc_0~load_int(257);
    var v'address = sc_0~__tact_load_address();
    var v'ok = sc_0~load_int(1);
    return (sc_0, (v'amount, v'address, v'ok));
}

builder __gen_write_Payouts(builder build_0, (slice, int) v) inline {
    var (v'owner, v'publicKey) = v;
    build_0 = __tact_store_address(build_0, v'owner);
    build_0 = build_0.store_int(v'publicKey, 257);
    return build_0;
}

(slice, ((slice, int))) __gen_read_Payouts(slice sc_0) inline {
    var v'owner = sc_0~__tact_load_address();
    var v'publicKey = sc_0~load_int(257);
    return (sc_0, (v'owner, v'publicKey));
}

builder __gen_write_$init$Beacon(builder build_0, (slice, slice) v) inline {
    var (v'master, v'owner) = v;
    build_0 = __tact_store_address(build_0, v'master);
    build_0 = __tact_store_address(build_0, v'owner);
    return build_0;
}

(slice, ((slice, int))) __gen_read_$init$Payouts(slice sc_0) inline {
    var v'owner = sc_0~__tact_load_address();
    var v'publicKey = sc_0~load_int(257);
    return (sc_0, (v'owner, v'publicKey));
}