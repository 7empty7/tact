;;
;; Type: SendParameters
;; TLB: _ bounce:bool to:address value:int257 mode:int257 body:Maybe ^cell code:Maybe ^cell data:Maybe ^cell = SendParameters
;;

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_value_to_mode_body(int value, slice to, int mode, cell body) inline {
    return (true, to, value, mode, body, null(), null());
}

;;
;; Type: ChangeOwner
;; Header: 0x0f474d03
;; TLB: change_owner#0f474d03 newOwner:address = ChangeOwner
;;

(slice, ((slice))) $ChangeOwner$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 256331011);
    var v'newOwner = sc_0~__tact_load_address();
    return (sc_0, (v'newOwner));
}

;;
;; Type: Withdraw
;; Header: 0x63b0a748
;; TLB: withdraw#63b0a748 amount:coins mode:uint8 = Withdraw
;;

(slice, ((int, int))) $Withdraw$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1672521544);
    var v'amount = sc_0~load_coins();
    var v'mode = sc_0~load_uint(8);
    return (sc_0, (v'amount, v'mode));
}

;;
;; Type: Treasure
;;

builder $Treasure$_store(builder build_0, (slice) v) inline {
    var (v'owner) = v;
    build_0 = __tact_store_address(build_0, v'owner);
    return build_0;
}

(slice, ((slice))) $Treasure$_load(slice sc_0) inline {
    var v'owner = sc_0~__tact_load_address();
    return (sc_0, (v'owner));
}

(slice, ((slice))) $Treasure$init$_load(slice sc_0) inline {
    var v'owner = sc_0~__tact_load_address();
    return (sc_0, (v'owner));
}

(slice) $Treasure$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~$Treasure$_load();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        (slice owner) = $sc~$Treasure$init$_load();
        $sc.end_parse();
        return $Treasure$_contract_init(owner);
    }
}

() $Treasure$_contract_store((slice) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = $Treasure$_store(b, v);
    set_data(b.end_cell());
}