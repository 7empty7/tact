tuple begin_string_builder() {
    return tpush(tpush(empty_tuple(), begin_cell()), null());
}

(tuple, ()) ~add_slice(tuple builders, slice sc) {
    (b, tail) = uncons(builders);
    int remBytes = 127 - (builder_bits/8);
    int exBytes = slice_bits(sc)/8;
    
    ;; Append bits
    int amount = min(remBytes, exBytes);
    if (amount > 0) {
        slice read = sc~read_bits(amount * 8);
        b = b.store_slice(read);
    }

    ;; Update builders
    builders = cons(b, tail);

    ;; Check if we need to add a new cell
    if (slice_bits(sc) > 0) {
        var bb = begin_cell();
        builders = cons(bb, builders);
        builders~add_slice(sc);
        return ((builders),());
    }

    ;; Check if we have refs
    int refs = slice_refs(sc);
    throw_if(1000, refs != 0 & refs != 1);
    if (refs == 0) {
        return ((builders),());
    } else {
        builders~add_slice(sc~load_ref().begin_parse());
        return ((builders),());
    }
}

cell unwrap(tuple builders) {
    (builder b, tuple tail) = uncons(builders);
    cell c = b.end_cell();
    while(~ null?(tail)) {
        (builder b, tuple tail) = uncons(tail);
        c = b.store_ref(c).end_cell(c);
    }
    return c;
}