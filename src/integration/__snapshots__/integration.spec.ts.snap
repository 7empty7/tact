// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`integration should resolve expressions for case-1.tact 1`] = `
"int __tact_add(int a, int b) inline {
    return a + b;
}

int __tact_sub(int a, int b) inline {
    return a - b;
}

int __tact_mul(int a, int b) inline {
    return a * b;
}

int __tact_div(int a, int b) inline {
    return a / b;
}

int __tact_eq(int a, int b) inline {
    return a == b;
}

int __tact_neq(int a, int b) inline {
    return a != b;
}

int __tact_lt(int a, int b) inline {
    return a < b;
}

int __tact_lte(int a, int b) inline {
    return a <= b;
}

int __tact_gt(int a, int b) inline {
    return a > b;
}

int __tact_gte(int a, int b) inline {
    return a >= b;
}

forall X -> X __tact_get(tuple x, int i) asm "INDEXVAR";

forall X -> X __tact_set(tuple x, int i, X v) asm "SETINDEXVARQ";
int isZero(int x, int y, int z) {
    int b = __tact_add(x, y);
    b = __tact_add(b, 1);
    return __tact_or(__tact_gt(b, 0), z);
}"
`;
