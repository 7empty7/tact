// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`resolveTypeDescriptors should resolve descriptors for case-0.tact 1`] = `
{
  "Bool": {
    "ast": {
      "id": 2,
      "kind": "primitive",
      "name": "Bool",
      "ref": primitive Bool;,
    },
    "fields": [],
    "functions": [],
    "init": null,
    "kind": "primitive",
    "name": "Bool",
    "receivers": [],
  },
  "Int": {
    "ast": {
      "id": 1,
      "kind": "primitive",
      "name": "Int",
      "ref": primitive Int;,
    },
    "fields": [],
    "functions": [],
    "init": null,
    "kind": "primitive",
    "name": "Int",
    "receivers": [],
  },
}
`;

exports[`resolveTypeDescriptors should resolve descriptors for case-0.tact 2`] = `{}`;

exports[`resolveTypeDescriptors should resolve descriptors for case-1.tact 1`] = `
{
  "Bool": {
    "ast": {
      "id": 5,
      "kind": "primitive",
      "name": "Bool",
      "ref": primitive Bool;,
    },
    "fields": [],
    "functions": [],
    "init": null,
    "kind": "primitive",
    "name": "Bool",
    "receivers": [],
  },
  "Int": {
    "ast": {
      "id": 4,
      "kind": "primitive",
      "name": "Int",
      "ref": primitive Int;,
    },
    "fields": [],
    "functions": [],
    "init": null,
    "kind": "primitive",
    "name": "Int",
    "receivers": [],
  },
  "Struct1": {
    "ast": {
      "fields": [
        {
          "as": null,
          "id": 7,
          "init": undefined,
          "kind": "def_field",
          "name": "a",
          "ref": a: Int;,
          "type": {
            "id": 6,
            "kind": "type_ref_simple",
            "name": "Int",
            "optional": false,
            "ref": Int,
          },
        },
        {
          "as": null,
          "id": 9,
          "init": undefined,
          "kind": "def_field",
          "name": "b",
          "ref": b: Bool;,
          "type": {
            "id": 8,
            "kind": "type_ref_simple",
            "name": "Bool",
            "optional": false,
            "ref": Bool,
          },
        },
      ],
      "id": 10,
      "kind": "def_struct",
      "message": false,
      "name": "Struct1",
      "ref": struct Struct1 {
    a: Int;
    b: Bool;
},
    },
    "fields": [
      {
        "as": null,
        "default": undefined,
        "index": 0,
        "name": "a",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
      {
        "as": null,
        "default": undefined,
        "index": 1,
        "name": "b",
        "type": {
          "kind": "ref",
          "name": "Bool",
          "optional": false,
        },
      },
    ],
    "functions": [],
    "init": null,
    "kind": "struct",
    "name": "Struct1",
    "receivers": [],
  },
  "Struct2": {
    "ast": {
      "fields": [
        {
          "as": null,
          "id": 12,
          "init": undefined,
          "kind": "def_field",
          "name": "a",
          "ref": a: Struct1;,
          "type": {
            "id": 11,
            "kind": "type_ref_simple",
            "name": "Struct1",
            "optional": false,
            "ref": Struct1,
          },
        },
      ],
      "id": 13,
      "kind": "def_struct",
      "message": false,
      "name": "Struct2",
      "ref": struct Struct2 {
    a: Struct1;
},
    },
    "fields": [
      {
        "as": null,
        "default": undefined,
        "index": 0,
        "name": "a",
        "type": {
          "kind": "ref",
          "name": "Struct1",
          "optional": false,
        },
      },
    ],
    "functions": [],
    "init": null,
    "kind": "struct",
    "name": "Struct2",
    "receivers": [],
  },
}
`;

exports[`resolveTypeDescriptors should resolve descriptors for case-1.tact 2`] = `{}`;

exports[`resolveTypeDescriptors should resolve descriptors for case-2.tact 1`] = `
{
  "Bool": {
    "ast": {
      "id": 16,
      "kind": "primitive",
      "name": "Bool",
      "ref": primitive Bool;,
    },
    "fields": [],
    "functions": [],
    "init": null,
    "kind": "primitive",
    "name": "Bool",
    "receivers": [],
  },
  "Int": {
    "ast": {
      "id": 15,
      "kind": "primitive",
      "name": "Int",
      "ref": primitive Int;,
    },
    "fields": [],
    "functions": [],
    "init": null,
    "kind": "primitive",
    "name": "Int",
    "receivers": [],
  },
}
`;

exports[`resolveTypeDescriptors should resolve descriptors for case-2.tact 2`] = `
{
  "testFunc": {
    "args": [],
    "ast": {
      "args": [],
      "attribute": [],
      "id": 20,
      "kind": "def_function",
      "name": "testFunc",
      "ref": fun testFunc(): Int {
    return 0;
},
      "return": {
        "id": 17,
        "kind": "type_ref_simple",
        "name": "Int",
        "optional": false,
        "ref": Int,
      },
      "statements": [
        {
          "expression": {
            "id": 18,
            "kind": "number",
            "ref": 0,
            "value": 0n,
          },
          "id": 19,
          "kind": "statement_return",
          "ref": return 0;,
        },
      ],
    },
    "isGetter": false,
    "isPublic": false,
    "name": "testFunc",
    "returns": {
      "kind": "ref",
      "name": "Int",
      "optional": false,
    },
    "self": null,
  },
  "testFunc2": {
    "args": [],
    "ast": {
      "args": [],
      "attribute": [],
      "id": 23,
      "kind": "def_function",
      "name": "testFunc2",
      "ref": fun testFunc2() {
    return 0;
},
      "return": null,
      "statements": [
        {
          "expression": {
            "id": 21,
            "kind": "number",
            "ref": 0,
            "value": 0n,
          },
          "id": 22,
          "kind": "statement_return",
          "ref": return 0;,
        },
      ],
    },
    "isGetter": false,
    "isPublic": false,
    "name": "testFunc2",
    "returns": null,
    "self": null,
  },
  "testFunc3": {
    "args": [
      {
        "as": null,
        "name": "a",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
      {
        "as": null,
        "name": "b",
        "type": {
          "kind": "ref",
          "name": "Bool",
          "optional": false,
        },
      },
    ],
    "ast": {
      "args": [
        {
          "id": 25,
          "kind": "def_argument",
          "name": "a",
          "ref": a: Int,
          "type": {
            "id": 24,
            "kind": "type_ref_simple",
            "name": "Int",
            "optional": false,
            "ref": Int,
          },
        },
        {
          "id": 27,
          "kind": "def_argument",
          "name": "b",
          "ref": b: Bool,
          "type": {
            "id": 26,
            "kind": "type_ref_simple",
            "name": "Bool",
            "optional": false,
            "ref": Bool,
          },
        },
      ],
      "attribute": [],
      "id": 30,
      "kind": "def_function",
      "name": "testFunc3",
      "ref": fun testFunc3(a: Int, b: Bool) {
    return 0;
},
      "return": null,
      "statements": [
        {
          "expression": {
            "id": 28,
            "kind": "number",
            "ref": 0,
            "value": 0n,
          },
          "id": 29,
          "kind": "statement_return",
          "ref": return 0;,
        },
      ],
    },
    "isGetter": false,
    "isPublic": false,
    "name": "testFunc3",
    "returns": null,
    "self": null,
  },
}
`;

exports[`resolveTypeDescriptors should resolve descriptors for case-3.tact 1`] = `
{
  "Bool": {
    "ast": {
      "id": 33,
      "kind": "primitive",
      "name": "Bool",
      "ref": primitive Bool;,
    },
    "fields": [],
    "functions": [],
    "init": null,
    "kind": "primitive",
    "name": "Bool",
    "receivers": [],
  },
  "HelloWorld": {
    "ast": {
      "declarations": [
        {
          "as": null,
          "id": 35,
          "init": undefined,
          "kind": "def_field",
          "name": "a",
          "ref": a: Int;,
          "type": {
            "id": 34,
            "kind": "type_ref_simple",
            "name": "Int",
            "optional": false,
            "ref": Int,
          },
        },
        {
          "as": null,
          "id": 37,
          "init": undefined,
          "kind": "def_field",
          "name": "b",
          "ref": b: Bool;,
          "type": {
            "id": 36,
            "kind": "type_ref_simple",
            "name": "Bool",
            "optional": false,
            "ref": Bool,
          },
        },
        {
          "args": [],
          "attribute": [],
          "id": 38,
          "kind": "def_function",
          "name": "hello",
          "ref": fun hello() {
        
    },
          "return": null,
          "statements": [],
        },
        {
          "args": [],
          "attribute": [],
          "id": 39,
          "kind": "def_function",
          "name": "hello2",
          "ref": fun hello2() {
        
    },
          "return": null,
          "statements": [],
        },
      ],
      "id": 40,
      "kind": "def_contract",
      "name": "HelloWorld",
      "ref": contract HelloWorld {
    a: Int;
    b: Bool;

    fun hello() {
        
    }

    fun hello2() {
        
    }
},
    },
    "fields": [
      {
        "as": null,
        "default": undefined,
        "index": 0,
        "name": "a",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
      {
        "as": null,
        "default": undefined,
        "index": 1,
        "name": "b",
        "type": {
          "kind": "ref",
          "name": "Bool",
          "optional": false,
        },
      },
    ],
    "functions": [
      {
        "args": [],
        "ast": {
          "args": [],
          "attribute": [],
          "id": 38,
          "kind": "def_function",
          "name": "hello",
          "ref": fun hello() {
        
    },
          "return": null,
          "statements": [],
        },
        "isGetter": false,
        "isPublic": false,
        "name": "hello",
        "returns": null,
        "self": [Circular],
      },
      {
        "args": [],
        "ast": {
          "args": [],
          "attribute": [],
          "id": 39,
          "kind": "def_function",
          "name": "hello2",
          "ref": fun hello2() {
        
    },
          "return": null,
          "statements": [],
        },
        "isGetter": false,
        "isPublic": false,
        "name": "hello2",
        "returns": null,
        "self": [Circular],
      },
    ],
    "init": null,
    "kind": "contract",
    "name": "HelloWorld",
    "receivers": [],
  },
  "Int": {
    "ast": {
      "id": 32,
      "kind": "primitive",
      "name": "Int",
      "ref": primitive Int;,
    },
    "fields": [],
    "functions": [],
    "init": null,
    "kind": "primitive",
    "name": "Int",
    "receivers": [],
  },
}
`;

exports[`resolveTypeDescriptors should resolve descriptors for case-3.tact 2`] = `{}`;
