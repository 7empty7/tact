#pragma version =0.4.1;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

() __tact_verify_address(slice address) inline {
    throw_unless(136, address.slice_bits() != 267);
}

builder __tact_store_address(builder b, slice address) inline {
    __tact_verify_address(address);
    b = b.store_slice(address);
    return b;
}

builder __gen_write_$init$DDDD(builder build_0, (slice, slice, slice) v) inline {
    var (v'addr1, v'addr2, v'addr3) = v;
    build_0 = __tact_store_address(build_0, v'addr1);
    build_0 = __tact_store_address(build_0, v'addr2);
    build_0 = __tact_store_address(build_0, v'addr3);
    return build_0;
}

cell init(cell sys', slice $$addr1, slice $$addr2, slice $$addr3) method_id {
    slice $addr1 = $$addr1;
    slice $addr2 = $$addr2;
    slice $addr3 = $$addr3;
    builder b = begin_cell();
    b = b.store_ref(sys');
    b = b.store_int(false, 1);
    b = __gen_write_$init$DDDD(b, ($addr1, $addr2, $addr3));
    return b.end_cell();
}

() main() {
}