builder __gen_write_StdlibTest(builder build_0) impure {
    return build_0;
}

cell __gen_writecell_StdlibTest() inline {
    return __gen_write_StdlibTest(begin_cell(), ).end_cell();
}

(slice, ()) __gen_read_StdlibTest(slice sc) {
    return (sc, ());
}

() __gen_load_StdlibTest() inline {
    slice sc = get_data().begin_parse();
    return sc~__gen_read_StdlibTest();
}

cell __gen_StdlibTest_init() impure {
    var () = ();
    return __gen_writecell_StdlibTest();
}

(tuple, int) __gen_StdlibTest_sliceEmpty(tuple self, slice sc) impure {
    return (self, slice_empty? (sc));
}

_ __gen_get_sliceEmpty(slice sc) method_id(73995) {
    var self = __gen_load_StdlibTest();
    var res = self~__gen_StdlibTest_sliceEmpty(sc);
    return res;
}

(tuple, int) __gen_StdlibTest_sliceBits(tuple self, slice sc) impure {
    return (self, slice_bits (sc));
}

_ __gen_get_sliceBits(slice sc) method_id(75090) {
    var self = __gen_load_StdlibTest();
    var res = self~__gen_StdlibTest_sliceBits(sc);
    return res;
}

(tuple, int) __gen_StdlibTest_sliceRefs(tuple self, slice sc) impure {
    return (self, slice_refs (sc));
}

_ __gen_get_sliceRefs(slice sc) method_id(77445) {
    var self = __gen_load_StdlibTest();
    var res = self~__gen_StdlibTest_sliceRefs(sc);
    return res;
}

() recv_internal(cell in_msg_cell, slice in_msg) impure {
    int op = in_msg~load_uint(32);
    
    
    throw(100);
}

cell init_StdlibTest() method_id {
    return __gen_StdlibTest_init();
}