global (int, slice, int) __tact_context;
global cell __tact_context_sys;

(int, slice, int) __tact_context_get() inline { return __tact_context; }

(slice, slice) __tact_load_address(slice cs) inline {
    slice raw = cs~load_msg_addr();
    return (cs, raw);
}

builder __tact_store_address(builder b, slice address) inline {
    b = b.store_slice(address);
    return b;
}

int __tact_address_eq(slice a, slice b) inline {
    return equal_slice_bits(a, b);
}

cell __tact_dict_get_code(cell dict, int id) inline {
    var (data, ok) = udict_get_ref?(dict, 16, id);
    throw_unless(100, ok);
    return data;
}

(slice, ((cell))) __gen_read_JettonUpdateContent(slice sc) inline {
    throw_unless(100, sc~load_uint(32) == 3551049822);
    var v'content = null();
    if (sc~load_int(1)) {
        var v'content = sc~load_ref();
    }
    return (sc, (v'content));
}

(slice, ((int))) __gen_read_Mint(slice sc) inline {
    throw_unless(100, sc~load_uint(32) == 2737462367);
    var v'amount = sc~load_int(257);
    return (sc, (v'amount));
}

(slice, ((int, slice, slice))) __gen_read_Burned(slice sc) inline {
    throw_unless(100, sc~load_uint(32) == 2078119902);
    var v'amount = sc~load_int(257);
    var v'owner = sc~__tact_load_address();
    var v'cashback = null();
    if (sc~load_int(1)) {
        var v'cashback = sc~__tact_load_address();
    }
    return (sc, (v'amount, v'owner, v'cashback));
}

builder __gen_write_SampleJettonWallet(builder build_0, (slice, slice, int) v) inline {
    var (v'master, v'owner, v'balance) = v;
    build_0 = __tact_store_address(build_0, v'master);
    build_0 = __tact_store_address(build_0, v'owner);
    build_0 = store_int(build_0, v'balance, 257);
    return build_0;
}

builder __gen_write_SampleJetton(builder build_0, (int, slice, cell, int, cell) v) inline {
    var (v'totalSupply, v'owner, v'content, v'mintable, v'walletCode) = v;
    build_0 = store_coins(build_0, v'totalSupply);
    build_0 = __tact_store_address(build_0, v'owner);
    if (null?(v'content)) {
        build_0 = store_int(build_0, false, 1);
    } else {
        build_0 = store_int(build_0, true, 1);
        build_0 = store_ref(build_0, v'content);
    }
    build_0 = store_int(build_0, v'mintable, 1);
    build_0 = store_ref(build_0, v'walletCode);
    return build_0;
}

(slice, ((int, slice, cell, int, cell))) __gen_read_SampleJetton(slice sc) inline {
    var v'totalSupply = sc~load_coins();
    var v'owner = sc~__tact_load_address();
    var v'content = null();
    if (sc~load_int(1)) {
        var v'content = sc~load_ref();
    }
    var v'mintable = sc~load_int(1);
    var v'walletCode = sc~load_ref();
    return (sc, (v'totalSupply, v'owner, v'content, v'mintable, v'walletCode));
}

_ __gen_Context_get_sender((int, slice, int) v) inline {
    var (v'bounced, v'sender, v'value) = v;
    return v'sender;
}

(int, slice, cell, int, cell) __gen_load_SampleJetton() inline {
    slice sc = get_data().begin_parse();
    __tact_context_sys = sc~load_ref();
    return sc~__gen_read_SampleJetton();
}

() __gen_store_SampleJetton((int, slice, cell, int, cell) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = __gen_write_SampleJetton(b, v);
    set_data(b.end_cell());
}

cell __gen_SampleJettonWallet_init(cell sys', slice master, slice owner) {
    var ((self'master, self'owner, self'balance)) = (null(), null(), null());
    self'balance = 0;
    self'master = master;
    self'owner = owner;
    var b' = begin_cell();
    b' = b'.store_ref(sys');
    b' = __gen_write_SampleJettonWallet(b', (self'master, self'owner, self'balance));
    return b'.end_cell();
}

(cell, cell) __gen_SampleJettonWallet_init_child(cell sys', slice master, slice owner) {
    slice sc' = sys'.begin_parse();
    cell source = sc'~load_dict();
    cell mine = __tact_dict_get_code(source, 52819);
    cell contracts = new_dict();
    cell sys = begin_cell().store_dict(contracts).end_cell();
    return (mine, __gen_SampleJettonWallet_init(sys, master, owner));
}

cell __gen_SampleJetton_init(cell sys', int totalSupply, int mintable, slice owner, cell content, cell walletCode) {
    var ((self'totalSupply, self'owner, self'content, self'mintable, self'walletCode)) = (null(), null(), null(), null(), null());
    self'totalSupply = totalSupply;
    self'owner = owner;
    self'mintable = mintable;
    self'content = content;
    self'walletCode = walletCode;
    var b' = begin_cell();
    b' = b'.store_ref(sys');
    b' = __gen_write_SampleJetton(b', (self'totalSupply, self'owner, self'content, self'mintable, self'walletCode));
    return b'.end_cell();
}

((int, slice, cell, int, cell), ()) __gen_SampleJetton_mint((int, slice, cell, int, cell) self, slice to, int amount, (cell, cell) stateInit) impure {
    var ((self'totalSupply, self'owner, self'content, self'mintable, self'walletCode)) = self;
    var ((stateInit'code, stateInit'data)) = stateInit;
    self'totalSupply = (self'totalSupply + amount);
    return ((self'totalSupply, self'owner, self'content, self'mintable, self'walletCode), ());
}

((int, slice, cell, int, cell), ()) __gen_SampleJetton_requireOwner((int, slice, cell, int, cell) self) impure {
    var ((self'totalSupply, self'owner, self'content, self'mintable, self'walletCode)) = self;
    throw_unless(100, __tact_address_eq(__gen_Context_get_sender(__tact_context_get()), self'owner));
    return ((self'totalSupply, self'owner, self'content, self'mintable, self'walletCode), ());
}

slice __gen_SampleJetton_owner((int, slice, cell, int, cell) self) impure {
    var ((self'totalSupply, self'owner, self'content, self'mintable, self'walletCode)) = self;
    return self'owner;
}

_ __gen_get_owner() method_id(83229) {
    var self = __gen_load_SampleJetton();
    var res = __gen_SampleJetton_owner(self);
    return res;
}

(((int, slice, cell, int, cell)), ()) __gen_SampleJetton_receive_Mint((int, slice, cell, int, cell) self, (int) msg) impure {
    var (self'totalSupply, self'owner, self'content, self'mintable, self'walletCode) = self;
    var (msg'amount) = msg;
    var (int ctx'bounced, slice ctx'sender, int ctx'value) = __tact_context_get();
    (self'totalSupply, self'owner, self'content, self'mintable, self'walletCode)~__gen_SampleJetton_mint(ctx'sender, msg'amount, __gen_SampleJettonWallet_init_child(__tact_context_sys, my_address(), ctx'sender));
    return ((self'totalSupply, self'owner, self'content, self'mintable, self'walletCode), ());
}

(((int, slice, cell, int, cell)), ()) __gen_SampleJetton_receive_Burned((int, slice, cell, int, cell) self, (int, slice, slice) msg) impure {
    var (self'totalSupply, self'owner, self'content, self'mintable, self'walletCode) = self;
    var (msg'amount, msg'owner, msg'cashback) = msg;
    var (int ctx'bounced, slice ctx'sender, int ctx'value) = __tact_context_get();
    return ((self'totalSupply, self'owner, self'content, self'mintable, self'walletCode), ());
}

(((int, slice, cell, int, cell)), ()) __gen_SampleJetton_receive_JettonUpdateContent((int, slice, cell, int, cell) self, (cell) msg) impure {
    var (self'totalSupply, self'owner, self'content, self'mintable, self'walletCode) = self;
    var (msg'content) = msg;
    (self'totalSupply, self'owner, self'content, self'mintable, self'walletCode)~__gen_SampleJetton_requireOwner();
    self'content = msg'content;
    return ((self'totalSupply, self'owner, self'content, self'mintable, self'walletCode), ());
}


() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = ((msg_flags & 1) == 1 ? true : false);
    slice msg_sender_addr = cs~load_msg_addr();
    __tact_context = (msg_bounced, msg_sender_addr, msg_value);
    
    ;; Handle bounced messages
    if (msg_bounced) {
        return ();
    }
    
    ;; Receive Mint message
    if (op == 2737462367) {
        var self = __gen_load_SampleJetton();
        var msg = in_msg~__gen_read_Mint();
        self~__gen_SampleJetton_receive_Mint(msg);
        __gen_store_SampleJetton(self);
        return ();
    }
    
    ;; Receive Burned message
    if (op == 2078119902) {
        var self = __gen_load_SampleJetton();
        var msg = in_msg~__gen_read_Burned();
        self~__gen_SampleJetton_receive_Burned(msg);
        __gen_store_SampleJetton(self);
        return ();
    }
    
    ;; Receive JettonUpdateContent message
    if (op == 3551049822) {
        var self = __gen_load_SampleJetton();
        var msg = in_msg~__gen_read_JettonUpdateContent();
        self~__gen_SampleJetton_receive_JettonUpdateContent(msg);
        __gen_store_SampleJetton(self);
        return ();
    }
    
    throw(100);
}

cell init_SampleJetton(cell sys', int totalSupply, int mintable, slice owner, cell content, cell walletCode) method_id {
    return __gen_SampleJetton_init(sys', totalSupply, mintable, owner, content, walletCode);
}