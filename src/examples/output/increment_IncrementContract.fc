forall X -> X __tact_not_null(X x) { throw_if(14, null?(x)); return x; }

global (int, slice, int) __tact_context;
global cell __tact_context_sys;

(cell, ()) __tact_dict_set_int_int(cell d, int kl, int k, int v, int vl) {
    if (null?(v)) {
        var (r, ok) = idict_delete?(d, kl, k);
        return (r, ());
    } else {
        return (idict_set_builder(d, kl, k, begin_cell().store_int(v, vl)), ());
    }
}

int __tact_dict_get_int_int(cell d, int kl, int k, int vl) {
    var (r, ok) = idict_get?(d, kl, k);
    if (ok) {
        return r~load_int(vl);
    } else {
        return null();
    }
}

(slice, ((int, int))) __gen_read_Increment(slice sc) inline {
    throw_unless(100, sc~load_uint(32) == 3615081709);
    var v'key = sc~load_int(257);
    var v'value = sc~load_int(257);
    return (sc, (v'key, v'value));
}

(slice, ((int))) __gen_read_Toggle(slice sc) inline {
    throw_unless(100, sc~load_uint(32) == 575056061);
    var v'key = sc~load_int(257);
    return (sc, (v'key));
}

builder __gen_write_IncrementContract(builder build_0, (cell, cell) v) inline {
    var (v'counters, v'counters2) = v;
    build_0 = store_dict(build_0, v'counters);
    build_0 = store_dict(build_0, v'counters2);
    return build_0;
}

(slice, ((cell, cell))) __gen_read_IncrementContract(slice sc) inline {
    var v'counters = sc~load_dict();
    var v'counters2 = sc~load_dict();
    return (sc, (v'counters, v'counters2));
}

(cell, cell) __gen_load_IncrementContract() inline {
    slice sc = get_data().begin_parse();
    __tact_context_sys = sc~load_ref();
    return sc~__gen_read_IncrementContract();
}

() __gen_store_IncrementContract((cell, cell) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = __gen_write_IncrementContract(b, v);
    set_data(b.end_cell());
}

cell __gen_IncrementContract_init(cell sys') {
    var ((self'counters, self'counters2)) = (null(), null());
    var b' = begin_cell();
    b' = b'.store_ref(sys');
    b' = __gen_write_IncrementContract(b', (self'counters, self'counters2));
    return b'.end_cell();
}

cell __gen_IncrementContract_counters((cell, cell) self) impure {
    var ((self'counters, self'counters2)) = self;
    return self'counters;
}

_ __gen_get_counters() method_id(95239) {
    var self = __gen_load_IncrementContract();
    var res = __gen_IncrementContract_counters(self);
    return res;
}

(((cell, cell)), ()) __gen_IncrementContract_receive_Increment((cell, cell) self, (int, int) msg) impure {
    var (self'counters, self'counters2) = self;
    var (msg'key, msg'value) = msg;
    self'counters~__tact_dict_set_int_int(257, msg'key, msg'value, 257);
    return ((self'counters, self'counters2), ());
}

(((cell, cell)), ()) __gen_IncrementContract_receive_Toggle((cell, cell) self, (int) msg) impure {
    var (self'counters, self'counters2) = self;
    var (msg'key) = msg;
    int ex = __tact_dict_get_int_int(self'counters2, 257, msg'key, 1);
    if (null?(ex)) {
        self'counters2~__tact_dict_set_int_int(257, msg'key, true, 1);
    } else {
        self'counters2~__tact_dict_set_int_int(257, msg'key, (~ __tact_not_null(ex)), 1);
    }
    return ((self'counters, self'counters2), ());
}


() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = ((msg_flags & 1) == 1 ? true : false);
    slice msg_sender_addr = cs~load_msg_addr();
    __tact_context = (msg_bounced, msg_sender_addr, msg_value);
    
    ;; Handle bounced messages
    if (msg_bounced) {
        return ();
    }
    
    ;; Receive Increment message
    if (op == 3615081709) {
        var self = __gen_load_IncrementContract();
        var msg = in_msg~__gen_read_Increment();
        self~__gen_IncrementContract_receive_Increment(msg);
        __gen_store_IncrementContract(self);
        return ();
    }
    
    ;; Receive Toggle message
    if (op == 575056061) {
        var self = __gen_load_IncrementContract();
        var msg = in_msg~__gen_read_Toggle();
        self~__gen_IncrementContract_receive_Toggle(msg);
        __gen_store_IncrementContract(self);
        return ();
    }
    
    throw(100);
}

cell init_IncrementContract(cell sys') method_id {
    return __gen_IncrementContract_init(sys');
}